clc;
clear;
close all;

% --------- Load image ----------
% ✅ Fix: use correct path and quotes
img = imread('MATLAB Drive/pen.jpg');
img = im2double(img);
[h, w, ~] = size(img);

% --------- Gradient for watershed ----------
I = rgb2gray(img);
I = imgaussfilt(I, 1.0);
G = imgradient(I);

% --------- Ask user how many regions ----------
numRegions = input('Enter the number of regions to segment: ');

% --------- Interactive marker drawing ----------
figure('Name','Draw markers (double-click to finish each)');
imshow(img);
title('Draw ROI markers (double-click each to finish)');
hold on;

markerMask = zeros(h, w, 'uint16');
markerColors = containers.Map('KeyType','double','ValueType','any');

for markerID = 1:numRegions
    % Assign random bright color
    c = 0.2 + 0.8*rand(1,3);
    markerColors(markerID) = c;

    % Let user draw ROI
    disp(['Draw marker: ' num2str(markerID)]);
    hRoi = drawfreehand('Color', c, 'FaceAlpha', 0.15, 'LineWidth', 1.5);
    mask = createMask(hRoi);
    markerMask(mask) = markerID;

    % Display marker label
    pos = mean(hRoi.Position,1);
    text(pos(1), pos(2), ['Marker: ' num2str(markerID)], ...
        'Color','w','FontSize',12,'FontWeight','bold','BackgroundColor','k');
end

% --------- Show markers ----------
allIDs = 1:numRegions;
colorArray = zeros(numRegions, 3);
for k = allIDs
    if isKey(markerColors, k)
        colorArray(k, :) = markerColors(k);
    else
        colorArray(k, :) = [0 0 0]; % unused ID is black
    end
end

figure;
imshow(label2rgb(markerMask, colorArray, 'w'));
title('User Markers');

% --------- Watershed segmentation ----------
% ✅ Ensure we are using the built-in watershed
clear watershed;  % clears any variable named 'watershed'
G_forced = imimposemin(G, markerMask > 0);
Lw = watershed(G_forced);  % should now work properly

% --------- Assign basins to markers ----------
assignedMap = zeros(h, w, 'uint16');
basins = unique(Lw);
basins(basins == 0) = [];

for k = 1:numel(basins)
    lab = basins(k);
    pix = (Lw == lab);
    mvals = markerMask(pix);
    mvals = mvals(mvals > 0);
    if ~isempty(mvals)
        assignedMap(pix) = mode(mvals);
    end
end

% --------- Fill unassigned basins ----------
unassigned = (assignedMap == 0);
if any(unassigned(:))
    [~, idx] = bwdist(markerMask > 0);
    nearestMarkerId = markerMask(idx);
    assignedMap(unassigned) = nearestMarkerId(unassigned);
end

% --------- Build segmentation ----------
segRGB = zeros(h, w, 3);
for id = 1:numRegions
    if isKey(markerColors, id)
        c = markerColors(id);
        m = (assignedMap == id);
        segRGB(:,:,1) = segRGB(:,:,1) + m * c(1);
        segRGB(:,:,2) = segRGB(:,:,2) + m * c(2);
        segRGB(:,:,3) = segRGB(:,:,3) + m * c(3);
    end
end

% --------- Overlay ----------
alpha = 0.4;
overlay = (1 - alpha) * img + alpha * segRGB;
boundaries = (Lw == 0);
overlay(repmat(boundaries, [1 1 3])) = 1;

figure;
imshow(overlay);
title('Watershed Segmentation with Markers');
